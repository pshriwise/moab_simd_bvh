

#define TEST_FILE "${CMAKE_CURRENT_BINARY_DIR}/test_files/sphere.h5m"

#include "assert.h"

#include "moab/Core.hpp"
#include "moab/CartVect.hpp"

#include "Primitive.h"
#include "Builder.h"
#include "Intersector.h"
#include "MBVH.h"

int main(int argc, char** argv) {
  
  moab::Interface* mbi = new moab::Core();
  
  moab::ErrorCode rval;
  
  rval = mbi->load_file(TEST_FILE);
  MB_CHK_SET_ERR(rval, "Failed to load test file");

  moab::Range all_tris;

  rval = mbi->get_entities_by_type(0, moab::MBTRI, all_tris, true);
  MB_CHK_SET_ERR(rval, "Failed to get all triangles in the model");

  std::vector<TriangleRef> tris;

  moab::Range::iterator i;
  int counter = 0;
  for(i = all_tris.begin(); i != all_tris.end(); i++) {

    moab::EntityHandle tri = *i;

    TriangleRef t = TriangleRef(tri, mbi);
    
    tris.push_back(t);
    
  }


  TriangleBVH TBVH(create_leaf);

  BuildSettings settings;
  
  BuildStateTri bs = BuildStateTri(0, tris);

  NodeRef* root = TBVH.Build(settings, bs);

  // Vec3fa org(0.0, 0.0, 0.0);
  // Vec3fa dir(1.0, 0.0, 0.0);

  // Ray r = Ray(org, dir, 0.0, inf);

  // BuildPrimitiveIntersector BPINT;

  // BPINT.intersectRay(*root, r);
  
  // assert(r.tfar < inf);

  // std::cout << r << std::endl;
  
return 0;

}
